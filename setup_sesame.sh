# Sesame installer shell script

SESAME_TAR=sesamesim-1.5.2.tar.gz
MAPPINGMODULE_TAR=mappingmodule-1.0.tar.gz
BASE_URL=https://csa.science.uva.nl/download/sesame/

# Will contain export to set sesame environment
SESAME_ENV_FILE=sesame.env

print_deps() {
cat << EOF
Sesame depends on the following Ubuntu packages:

gcc
g++
libtool
libltdl-dev
python-networkx
python-lxml
python-argparse
libxerces-c-dev
libperl-dev
bison
flex
EOF
}

print_usage() {
cat << EOF
Usage $0

This script installs the Sesame framework.

Source code will be retrieved from:     $BASE_URL
Default installation directory is:      $INSTALLDIR

For additional help see also:
https://csa.science.uva.nl/trac/dse/wiki/SesameInstallationGuide

Script Options:
    -h             Show this message
    -p DIR         Install into DIR   
    -l             List dependencies

EOF
}



# Takes two parameters. The response from a command and error message
# If the response is not zero, print the error message and exit
check() {
    if [ $1 -ne 0 ]
    then
        echo -e "\e[1;31mERROR: $2\e[0m"
        exit 1
    fi
}

# This function downloads the flow components. Requires Internet access
get_and_unpack_packages() {
    WGET_OPTS="--no-check-certificate -q -nc"
    echo "wget $WGET_OPTS $BASE_URL/sesame/$SESAME_TAR"
    wget $WGET_OPTS $BASE_URL/sesame/$SESAME_TAR
    check $? "Cannot download $SESAME_TAR file"
    tar xzf $SESAME_TAR

    echo "wget $WGET_OPTS $BASE_URL/mappingmodule/$MAPPINGMODULE_TAR"
    wget $WGET_OPTS $BASE_URL/mappingmodule/$MAPPINGMODULE_TAR
    check $? "Cannot download $MAPPINGMODULE_TAR file"
    tar xzf $MAPPINGMODULE_TAR
}

# Runs setup of mappingmodule
# SESAME_ENV_FILE is appended with PYTHONPATH definition
setup_mappingmodule() {
    cd `basename $MAPPINGMODULE_TAR .tar.gz`

    # PYTHONPATH needs to be set to the install dir otherwise the install
    # will fail.
    # TODO: How to detect lib64 install?
    python_version=`python -V 2>&1 | sed 's/Python \([0-9]\.[0-9]\).*/\1/'`
    location=$INSTALLDIR/lib/python${python_version}/site-packages

    export PYTHONPATH+=:$location

    python setup.py install --prefix $INSTALLDIR
    
    # Append export to SESAME_ENV_FILE
    echo "export PYTHONPATH+=:$location" >> ../$SESAME_ENV_FILE
    cd ..
}

# Sesame setup
setup_sesame() {
    # Enter Sesame root
    cd `basename $SESAME_TAR .tar.gz`

    # Add environment to env file.
    echo "export PATH=$INSTALLDIR/bin:\$PATH" >> ../$SESAME_ENV_FILE
    # Also needed during installation.
    export PATH=$INSTALLDIR/bin:$PATH
    
    ./configure --prefix=$INSTALLDIR
    # TODO check succes
    make
    make install
    # Run checks

    make check
    cd ..
}

#---------------------------------------------------------------------- 
# Start of Main 
#---------------------------------------------------------------------- 

# Default installation directory
INSTALLDIR=$HOME/opt 

while getopts "hlp:" OPTION; do
    case $OPTION in
    h)
        print_usage
        exit 0
        ;;
    l)
        print_deps
        exit 0
        ;;
    p)
        INSTALLDIR=$OPTARG
        # TODO need to create this dir?
        ;;
    esac
done

echo "Sesame will be installed in $INSTALLDIR"

# Download packages and unpack
get_and_unpack_packages

# SESAME_ENV_FILE will contain the exports that setup the sesame environment
echo "# Environment setup file generated by $0" > $SESAME_ENV_FILE

setup_mappingmodule
setup_sesame

echo
echo "Installation finished."
echo "Setup up your Sesame environment by sourcing the sesame.env file with:"
echo "source sesame.env"
echo
